plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.kiworkshop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'org.springframework.boot'
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    runtimeOnly 'com.h2database:h2'
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation('org.junit.jupiter:junit-jupiter-params')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')
}

test {
    useJUnitPlatform()
}
jacocoTestReport {
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/*Application*', '**/*Config*', '**/config/*'])
        })
    }

    dependsOn test
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output
            compileClasspath += main.compileClasspath
            compileClasspath += test.output
            compileClasspath += test.compileClasspath
            runtimeClasspath += test.runtimeClasspath
        }
    }
}

task integrationTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    shouldRunAfter test
    useJUnitPlatform()
}
check.dependsOn integrationTest

task checkstyleAll(type: Test) {
    group = 'verification'
}
checkstyleAll.dependsOn checkstyleMain
checkstyleAll.dependsOn checkstyleTest
checkstyleAll.dependsOn checkstyleIntegrationTest
